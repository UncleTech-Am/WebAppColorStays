@model IEnumerable<WebAppColorStays.Models.ViewModel.CsCountryOverView>


@{
    Layout = null;
    ViewData["Action"] = "CountryOverView";
}

<div style="color:red; font-weight:bold; font-size:15px;"> @ViewBag.Message</div>

<div class="BrTp3_Cr Br1_Cr BrRs10 CrBrTe CrBdTeBody Pg12">
    <div id="PagenationShow">
        @await Html.PartialAsync("_Pagination")
    </div>

    <div class="Wh100p OwAo" style="height:70vh;">
        <table class="TeStrip TeBr TeFxCl1" id="TeUT">
            <thead class="TeFxHd">
                <form id="TableSearchID">
                <tr>
                    <td class="CrBdWe94">
                        @if (ViewData["AnName"] == "Create")
                        {<button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/CountryOverView/Create'"><i class="UT-List-OLine"></i></button> }
                        else if (ViewData["AnName"] == "Edit")
                        { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/CountryOverView/Edit?id='+'@ViewData["Id"]'"><i class="UT-List-OLine"></i></button> }
                        else
                        { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/CountryOverView/Index'"><i class="UT-List-OLine"></i></button>}
                        <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="SearchClear('TeUT')"><i class="UT-ClearDocument"></i></button>
                        <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="FormSubmit('/ColorStays/CountryOverView/TableSearch','TableSearchID',TableSuccessFn)"><i class="UT-SearchRightSolid"></i></button>
                    </td>


                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Country_Name)" name="Fk_Country_Name" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.AirportTagLine)" name="AirportTagLine" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.AirportDescription)" name="AirportDescription" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.AirportImage)" name="AirportImage" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.TerrainTagLine)" name="TerrainTagLine" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.TerrainDescription)" name="TerrainDescription" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.TerrainImage)" name="TerrainImage" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivityTagLine)" name="ActivityTagLine" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivityDescription)" name="ActivityDescription" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivityImage)" name="ActivityImage" autocomplete="off" />
                    </td>
                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Remarks)" name="Remarks" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezeStatus)" name="FreezeStatus" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezedBy)" name="FreezedBy" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedStatus)" name="VerifiedStatus" autocomplete="off" />
                    </td>
                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedOn)" name="VerifiedOn" autocomplete="off" id="VerifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('VerifiedOn','Date')" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedBy)" name="VerifiedBy" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActiveStatus)" name="ActiveStatus" autocomplete="off" />
                    </td>
                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedOn)" name="ActivatedOn" autocomplete="off" id="ActivatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ActivatedOn','Date')" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedBy)" name="ActivatedBy" autocomplete="off" />
                    </td>
                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedOn)" name="CreatedOn" autocomplete="off" id="CreatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('CreatedOn','Date')" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedBy)" name="CreatedBy" autocomplete="off" />
                    </td>
                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedOn)" name="ModifiedOn" autocomplete="off" id="ModifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ModifiedOn','Date')" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedBy)" name="ModifiedBy" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModificationFrequency)" name="ModificationFrequency" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.GCompId)" name="GCompId" autocomplete="off" />
                    </td>

                    <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CompId)" name="CompId" autocomplete="off" />
                    </td>
                </tr>
                </form>
                <tr>
                    <th>
                        <span class="BnInSe14  CrBdTeBn HrTmSeo94 Cr-uPr">
                            <input type="checkbox" class="SeIt1o14" onclick="AmSelectEntries();" id="AmIndexCheckBoxThId" />
                        </span>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark UnStar" onclick="MultiButtonFunc('UnStar','','','/ColorStays/CountryOverView')"><i class="UT-UnstarSolid"></i></a>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark Star" onclick="MultiButtonFunc('Star','','','/ColorStays/CountryOverView')"> <i class="UT-StarSolid"></i></a>
                    </th>
                    <th> @Html.DisplayNameFor(model => model.Fk_Country_Name) </th>
                    <th> @Html.DisplayNameFor(model => model.AirportTagLine) </th>
                    <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.AirportDescription) </th>
                    <th> @Html.DisplayNameFor(model => model.AirportImage) </th>
                    <th> @Html.DisplayNameFor(model => model.TerrainTagLine) </th>
                    <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.TerrainDescription) </th>
                    <th> @Html.DisplayNameFor(model => model.TerrainImage) </th>
                    <th> @Html.DisplayNameFor(model => model.ActivityTagLine) </th>
                    <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.ActivityDescription) </th>
                    <th> @Html.DisplayNameFor(model => model.ActivityImage) </th>
                    <th> @Html.DisplayNameFor(model => model.Remarks) </th>
                    <th> @Html.DisplayNameFor(model => model.FreezeStatus) </th>
                    <th> @Html.DisplayNameFor(model => model.FreezedBy) </th>
                    <th> @Html.DisplayNameFor(model => model.VerifiedStatus) </th>
                    <th> @Html.DisplayNameFor(model => model.VerifiedOn) </th>
                    <th> @Html.DisplayNameFor(model => model.VerifiedBy) </th>
                    <th> @Html.DisplayNameFor(model => model.ActiveStatus) </th>
                    <th> @Html.DisplayNameFor(model => model.ActivatedOn) </th>
                    <th> @Html.DisplayNameFor(model => model.ActivatedBy) </th>
                    <th> @Html.DisplayNameFor(model => model.CreatedOn) </th>
                    <th> @Html.DisplayNameFor(model => model.CreatedBy) </th>
                    <th> @Html.DisplayNameFor(model => model.ModifiedOn) </th>
                    <th> @Html.DisplayNameFor(model => model.ModifiedBy) </th>
                    <th> @Html.DisplayNameFor(model => model.ModificationFrequency) </th>
                    <th> @Html.DisplayNameFor(model => model.GCompId) </th>
                    <th> @Html.DisplayNameFor(model => model.CompId) </th>
                </tr>
            </thead>

            <tbody id="Def">
                @await Html.PartialAsync("_IndexData")
            </tbody>
        </table>
    </div>
</div>
<script>
    function ShowData(element) {
        var popup = document.getElementById('PopUpScript');
        popup.style.minHeight = "50%";
        popup.style.left = "25%";
        popup.style.top = "18%";
        popup.style.width = "50%";
        popup.style.overflowX = "auto";
        document.getElementById('PopUpScript').style.display = 'block';
        document.getElementById('PopUpScriptDetailContentID').innerHTML = element.innerHTML;
    }
</script>