@model WebAppColorStays.Model.ViewModel.CsBlog
@{ 
    Layout = null; 
    ViewData["Action"] = "Bg";
}

<div style="display:none">responseformUT SuccessPop</div>
<div id="BlogId" style="display:none;">@Model.Id</div>

<div class="BrTp3_Cr Br1_Cr BrRs10 CrBrTe CrBdTeBody Pg12">
    @if (ViewData["Show"] != "No")
    {
        <h3 class="MnTp7 MnBm7 Br2_Cr BrRs4 CrBrWe TtAnCr Pg5 HrCrTe">
            <i class="UT-DetailLine"></i>
            @ViewBag.Title Detail
        </h3>
    }
    <div style="overflow:auto; width:100%;" class="PopUpDetailContent">
        @if (ViewBag.Message != null && ViewData["Show"] != "No")
        {
            <h3><span style="color:red">@ViewBag.Message</span></h3>
        }

        <table class="TeStrip TeBr">


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.BlogURL)</td>
                <td>@Model.BlogURL</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Title)</td>
                <td id="BlogTitle">@Model.Title</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.TitleDescription)</td>
                <td>@Model.TitleDescription</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Fk_BlogCategory_Name)</td>
                <td>@Model.Fk_BlogCategory_Name</td>
            </tr>

            @*

            <tr>
            <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.PublishDate)</td>
            <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.PublishDate)</td>
            </tr>
            *@


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Description)</td>
                <td>@Model.Description</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Fk_BlogAuthor_Name)</td>
                <td>@Model.Fk_BlogAuthor_Name</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Views)</td>
                <td>@Model.Views</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Liked)</td>
                <td>@Model.Liked</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Unlike)</td>
                <td>@Model.Unlike</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Heart)</td>
                <td>@Model.Heart</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.SEOKeyword)</td>
                <td>@Model.SEOKeyword</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.SEODescription)</td>
                <td>@Model.SEODescription</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.SEOTitle)</td>
                <td>@Model.SEOTitle</td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Remarks)</td>
                <td>@Model.Remarks</td>
            </tr>




            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedStatus)</td>
                <td>
                    <div class="display-field">
                        @if (Model.VerifiedStatus == true)
                        {
                            <span>Verified</span>
                        }
                        else
                        {
                            <span>Pending-Verify</span>
                        }
                    </div>
                </td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.VerifiedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedBy)</td>
                <td>@Model.VerifiedBy</td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8"><h4> @Html.DisplayNameFor(model => model.ActiveStatus)</h4></td>
                <td>
                    <div class="display-field">
                        @if (Model.ActiveStatus == true)
                        {
                            <span>Active</span>
                        }
                        else
                        {
                            <span>Inactive</span>
                        }
                    </div>
                </td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ActivatedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.ActivatedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ActivatedBy)</td>
                <td>@Model.ActivatedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CreatedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.CreatedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CreatedBy)</td>
                <td>@Model.CreatedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModifiedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.ModifiedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModifiedBy)</td>
                <td>@Model.ModifiedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModificationFrequency)</td>
                <td>@Model.ModificationFrequency</td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CompId)</td>
                <td>@Model.CompId</td>
            </tr>

        </table>
    </div>
</div>
@if (ViewData["Show"] != "No")
{
    <div class="MnTp7 MnBm7 FxRw">
        <div class="DyFx FxJyCtSt Gp10 Wh100p">
            @if (Model.VerifiedStatus == false && Model.ActiveStatus == false && Model.GlobalStatus == false)
            {
                <button type="button" class="BnRd15 CrBdTeBnDe CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94" onclick="Delete('/ColorStays/Bg/DeleteConfirmed?Id=@Model.Id','/ColorStays/Bg');"><i class="UT-DeletePageSolid"></i>&nbsp;Delete</button>
            }

            @if (User.IsInRole("GlobalVerifier") || User.IsInRole("Owner") || User.IsInRole("Administrator"))
            {
                //  Checks which Button to Show For the Verification
                if (Model.VerifiedStatus == false && Model.GlobalStatus == false)
                {
                    <button type="button" onclick="VerifyData('/ColorStays/Bg/VerifyData?Id=@Model.Id&AnName=Verify','/ColorStays/Bg')" class="BnRd15 CrBdTeBnNt CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-VerifySolid"></i>&nbsp;Verify</button>
                }
                if (Model.VerifiedStatus == true && Model.GlobalStatus == false)
                {
                    <button type="button" onclick="VerifyData('/ColorStays/Bg/VerifyData?Id=@Model.Id&AnName=UnVerify','/ColorStays/Bg')" class="BnRd15 CrBdTeBnNt CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-VerifyNotSolid"></i>&nbsp;Un-Verify</button>
                }
                //  Checks which Button to Show For the Activation
                if (Model.ActiveStatus == false && Model.GlobalStatus == false)
                {
                    <button type="button" onclick="VerifyData('/ColorStays/Bg/VerifyData?Id=@Model.Id&AnName=Activate','/ColorStays/Bg')" class="BnRd15 CrBdTeBnPs CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-BulbOn"></i>&nbsp;Active</button>
                }
                if (Model.ActiveStatus == true && Model.GlobalStatus == false)
                {
                    <button type="button" onclick="VerifyData('/ColorStays/Bg/VerifyData?Id=@Model.Id&AnName=Inactivate','/ColorStays/Bg')" class="BnRd15 CrBdTeBnPs CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-BulbOff"></i>&nbsp;Inactive</button>
                }
            }
        </div>
    </div>

}


