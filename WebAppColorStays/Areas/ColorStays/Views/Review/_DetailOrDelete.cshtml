@model WebAppColorStays.Models.ViewModel.CsReview
@{
    Layout = null;
    ViewData["Action"] = "Review";
    var condition = Convert.ToString(ViewData["Type"]);
}

<div style="display:none">responseformUT ShowData</div>

<div class="BrTp3_Cr Br1_Cr BrRs10 CrBrTe CrBdTeBody Pg12">
    <h3 class="MnTp7 MnBm7 Br2_Cr BrRs4 CrBrWe TtAnCr Pg5 HrCrTe">
        <i class="UT-DetailLine"></i>
        @ViewBag.Title Detail
    </h3>
    <div style="overflow:auto; width:100%;" class="PopUpDetailContent">
        @if (ViewBag.Message != null)
        {<h3><span style="color:red">@ViewBag.Message</span></h3>}

        <table class="TeStrip TeBr">


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Fk_ReviewFor_Name)</td>
                <td>@Model.Fk_ReviewFor_Name</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Fk_ReviewQuestion_Name)</td>
                <td>@Model.Fk_ReviewQuestion_Name</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Rating)</td>
                <td>@Model.Rating</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.IsBool)</td>
                <td>@Model.IsBool</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Text)</td>
                <td>@Model.Text</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.IsPhotoUploaded)</td>
                <td>@Model.IsPhotoUploaded</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.IsRejected)</td>
                <td>@Model.IsRejected</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.Remarks)</td>
                <td>@Model.Remarks</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.FreezeStatus)</td>
                <td>@Model.FreezeStatus</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.FreezedBy)</td>
                <td>@Model.FreezedBy</td>
            </tr>




            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedStatus)</td>
                <td><div class="display-field">@if (Model.VerifiedStatus == true)
                {<span>Verified</span>}
                else
                { <span>Pending-Verify</span>}</div></td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.VerifiedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.VerifiedBy)</td>
                <td>@Model.VerifiedBy</td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8"><h4> @Html.DisplayNameFor(model => model.ActiveStatus)</h4></td>
                <td><div class="display-field">@if (Model.ActiveStatus == true)
                {<span>Active</span>}
                else
                { <span>Inactive</span>}</div></td>
            </tr>


            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ActivatedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.ActivatedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ActivatedBy)</td>
                <td>@Model.ActivatedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CreatedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.CreatedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CreatedBy)</td>
                <td>@Model.CreatedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModifiedOn)</td>
                <td>@String.Format("{0:dd MMMM,yyyy hh:mm tt}", Model.ModifiedOn)</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModifiedBy)</td>
                <td>@Model.ModifiedBy</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.ModificationFrequency)</td>
                <td>@Model.ModificationFrequency</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.GCompId)</td>
                <td>@Model.GCompId</td>
            </tr>



            <tr>
                <td class="FtWt600 Pg8">@Html.DisplayNameFor(model => model.CompId)</td>
                <td>@Model.CompId</td>
            </tr>




        </table>
    </div>
</div>

<div class="MnTp7 MnBm7 FxRw">
    <div class="DyFx FxJyCtSt Gp10 Wh100p">
        @if (Model.VerifiedStatus == false && Model.ActiveStatus == false && Model.GlobalStatus == false)
        {
            <button type="button" class="BnRd15 CrBdTeBnDe CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94" onclick="ShowDPopUp('DeleteReview','You want to delete this!','/ColorStays/Review/DeleteConfirmed?Id=@Model.Label&condition=@condition','/ColorStays/Review/Index?condition=@condition')"><i class="UT-DeletePageSolid"></i>&nbsp;Delete</button>
        }

        @if (User.IsInRole("GlobalVerifier") || User.IsInRole("Owner") || User.IsInRole("Administrator"))
        {
            //  Checks which Button to Show For the Verification
            if (Model.VerifiedStatus == false && Model.GlobalStatus == false)
            {
                <button type="button" onclick="VerifyData('/ColorStays/Review/VerifyData?Id=@Model.Id&AnName=Verify','/ColorStays/Review')" class="BnRd15 CrBdTeBnNt CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-VerifySolid"></i>&nbsp;Verify</button>
            }
            if (Model.VerifiedStatus == true && Model.GlobalStatus == false)
            {
                <button type="button" onclick="VerifyData('/ColorStays/Review/VerifyData?Id=@Model.Id&AnName=UnVerify','/ColorStays/Review')" class="BnRd15 CrBdTeBnNt CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-VerifyNotSolid"></i>&nbsp;Un-Verify</button>
            }
            //  Checks which Button to Show For the Activation
            if (Model.ActiveStatus == false && Model.GlobalStatus == false)
            {
                <button type="button" onclick="VerifyData('/ColorStays/Review/VerifyData?Id=@Model.Id&AnName=Activate','/ColorStays/Review')" class="BnRd15 CrBdTeBnPs CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-BulbOn"></i>&nbsp;Active</button>
            }
            if (Model.ActiveStatus == true && Model.GlobalStatus == false)
            {
                <button type="button" onclick="VerifyData('/ColorStays/Review/VerifyData?Id=@Model.Id&AnName=Inactivate','/ColorStays/Review')" class="BnRd15 CrBdTeBnPs CrTtTeBnLt SwBxIt2TtBx-Vn1 HrTmSeo94"><i class="UT-BulbOff"></i>&nbsp;Inactive</button>
            }
        }
    </div>
</div>


@*Delete confirm popup*@
<div class="PopUpTop BrRs10  Br1_Cr CrBrTe SwBxIt1Dv-Vn1 " id="PopUpDelete">
    <div class="Wh100p TtAnCr">
        <div class="LineDiv"></div>
        <h2 class="PgBm10">Are you Sure?</h2>
        <h3 class="PgBm10" id="DeleteMessage"> </h3>
    </div>
    <div id="DeleteUrl" style="display:none;"></div>@*Store the Path of the DeleteConfirmed Action*@
    <div id="ListUrl" style="display:none;"></div>@*Store the Path of the List Action*@
    <div class="DyFx FxJyCtCr Gp10 Wh100p PgTp20">
        <div><button class="BnRd14 CrBdGy60 HrCrTe" id="DeleteButtonAction"><i class="UT-DeletePageSolid"></i>&nbsp;Delete</button>  </div>
        <div><button class="BnRd14 CrBdRd40 HrCrTe" onclick="HideDPopUp()"><i class="UT-CrossLine"></i>&nbsp;Cancel</button></div>
    </div>
</div>


