@model IEnumerable<WebAppColorStays.Models.ViewModel.CsVideo>


@{
    Layout = null;
    ViewData["Action"] = "Video";
}

<div style="color:red; font-weight:bold; font-size:15px;"> @ViewBag.Message</div>

<div class="BrTp3_Cr Br1_Cr BrRs10 CrBrTe CrBdTeBody Pg12">
    <div id="PagenationShow">
        @await Html.PartialAsync("_Pagination")
    </div>

    <div class="Wh100p OwAo" style="height:70vh;">
        <table class="TeStrip TeBr TeFxCl1" id="TeUT">
            <thead class="TeFxHd">
                <form id="TableSearchID">
                    <tr>
                        <td class="CrBdWe94">
                            @if (ViewData["AnName"] == "Create") { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Video/Create'"><i class="UT-List-OLine"></i></button> }
                            else if(ViewData["AnName"] == "Edit") {  <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Video/Edit?id='+'@ViewData["Id"]'"><i class="UT-List-OLine"></i></button>  }
                            else { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Video/Index'"><i class="UT-List-OLine"></i></button>  }
                            <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="SearchClear('TeUT')"><i class="UT-ClearDocument"></i></button>
                            <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="FormSubmit('/ColorStays/Video/TableSearch','TableSearchID',TableSuccessFn)"><i class="UT-SearchRightSolid"></i></button>
                        </td>
                    
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Place_Name)" name="Fk_Place_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_City_Name)" name="Fk_City_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_State_Name)" name="Fk_State_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Country_Name)" name="Fk_Country_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Title)" name="Title" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.AltTag)" name="AltTag" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Description)" name="Description" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ArchiveStatus)" name="ArchiveStatus" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ShowPlaceGallery)" name="ShowPlaceGallery" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ShowCityGallery)" name="ShowCityGallery" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ShowStateGallery)" name="ShowStateGallery" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ShowCountryGallery)" name="ShowCountryGallery" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Category_Name)" name="Fk_Category_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_SubCategory_Name)" name="Fk_SubCategory_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Remarks)" name="Remarks" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezeStatus)" name="FreezeStatus" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezedBy)" name="FreezedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedStatus)" name="VerifiedStatus" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedOn)" name="VerifiedOn" autocomplete="off" id="VerifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('VerifiedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedBy)" name="VerifiedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActiveStatus)" name="ActiveStatus" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedOn)" name="ActivatedOn" autocomplete="off" id="ActivatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ActivatedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedBy)" name="ActivatedBy" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedOn)" name="CreatedOn" autocomplete="off" id="CreatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('CreatedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedBy)" name="CreatedBy" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedOn)" name="ModifiedOn" autocomplete="off" id="ModifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ModifiedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedBy)" name="ModifiedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModificationFrequency)" name="ModificationFrequency" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.GCompId)" name="GCompId" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CompId)" name="CompId" autocomplete="off"/>
                        </td>
                    
                    </tr>
                </form>
                <tr>
                    <th>
                        <span class="BnInSe14  CrBdTeBn HrTmSeo94 Cr-uPr">
                            <input type="checkbox" class="SeIt1o14" onclick="AmSelectEntries();" id="AmIndexCheckBoxThId" />
                        </span>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark UnStar" onclick="MultiButtonFunc('UnStar','','','/ColorStays/Video')"><i class="UT-UnstarSolid"></i></a>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark Star" onclick="MultiButtonFunc('Star','','','/ColorStays/Video')"> <i class="UT-StarSolid"></i></a>
                    </th>
                                        <th> @Html.DisplayNameFor(model => model.Fk_Place_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_City_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_State_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Country_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Title) </th>       
                                        <th> @Html.DisplayNameFor(model => model.AltTag) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Description) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ArchiveStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ShowPlaceGallery) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ShowCityGallery) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ShowStateGallery) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ShowCountryGallery) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Category_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_SubCategory_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Remarks) </th>       
                                        <th> @Html.DisplayNameFor(model => model.FreezeStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.FreezedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActiveStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActivatedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActivatedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CreatedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CreatedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModifiedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModifiedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModificationFrequency) </th>       
                                        <th> @Html.DisplayNameFor(model => model.GCompId) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CompId) </th>              
                                    </tr>
            </thead>

            <tbody id="Def">
                @await Html.PartialAsync("_IndexData")
            </tbody>
        </table>
    </div>
</div>

