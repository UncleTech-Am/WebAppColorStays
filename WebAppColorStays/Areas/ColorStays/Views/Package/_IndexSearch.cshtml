@model IEnumerable<WebAppColorStays.Models.ViewModel.CsPackage>


@{
    Layout = null;
    ViewData["Action"] = "Package";
}

<div style="color:red; font-weight:bold; font-size:15px;"> @ViewBag.Message</div>
<input type="hidden" name="PeId" id="PeId" value="@ViewData["PId"]" />
<input type="hidden" name="PeTeId" id="PeTeId" value="@ViewData["PTId"]" />
<div class="BrTp3_Cr Br1_Cr BrRs10 CrBrTe CrBdTeBody Pg12">
    <div id="PagenationShow">
        @await Html.PartialAsync("_Pagination")
    </div>

    <div class="Wh100p OwAo" style="height:70vh;">
        <table class="TeStrip TeBr TeFxCl1" id="TeUT">
            <thead class="TeFxHd">
                <form id="TableSearchID">
                    <tr>
                        <td class="CrBdWe94" style="min-width:190px">
                            @if (ViewData["AnName"] == "Create") { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Package/Create'"><i class="UT-List-OLine"></i></button> }
                            else if(ViewData["AnName"] == "Edit") {  <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Package/Edit?id='+'@ViewData["Id"]'"><i class="UT-List-OLine"></i></button>  }
                            else { <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="location.href='/ColorStays/Package/Index'"><i class="UT-List-OLine"></i></button>  }
                            <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="SearchClear('TeUT')"><i class="UT-ClearDocument"></i></button>
                            <button type="button" class="BnCe28 CrBdWe94 MnLt7 SwBxIt1Dv-Vn1 HrTmRe360" onclick="FormSubmit('/ColorStays/Package/TableSearch','TableSearchID',TableSuccessFn)"><i class="UT-SearchRightSolid"></i></button>
                        </td>
                    
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Rank)" name="Rank" autocomplete="off" />
                        </td>
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Name)" name="Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.URL)" name="URL" autocomplete="off"/>
                        </td>
                        
                       
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_PackageType_Name)" name="Fk_PackageType_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Website_Name)" name="Fk_Website_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Location_Name)" name="Fk_Location_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_City_Name)" name="Fk_City_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_State_Name)" name="Fk_State_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Country_Name)" name="Fk_Country_Name" autocomplete="off"/>
                        </td>
                                               
                         
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Description)" name="Description" autocomplete="off"/>
                        </td>
                       
                      
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.PackageHighlight)" name="PackageHighlight" autocomplete="off"/>
                        </td>


                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Overview)" name="Overview" autocomplete="off" />
                        </td>


                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.NeedToKonw)" name="NeedToKonw" autocomplete="off" />
                        </td>

                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.MapLink)" name="MapLink" autocomplete="off"/>
                        </td>
                       
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_TermsAndCondition_Name)" name="Fk_TermsAndCondition_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_CancellationPyTe_Name)" name="Fk_CancellationPyTe_Name" autocomplete="off"/>
                        </td>
                        
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.NoOfPerson)" name="NoOfPerson" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CoverImage)" name="CoverImage" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CoverAltTag)" name="CoverAltTag" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Duration)" name="Duration" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Breakfast)" name="Breakfast" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Lunch)" name="Lunch" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Dinner)" name="Dinner" autocomplete="off"/>
                        </td>
                        
                         <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Sightseeing)" name="Sightseeing" autocomplete="off"/>
                        </td>
                        

                        <td>
                        <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.LowestPriceQuote)" name="LowestPriceQuote" autocomplete="off" />
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Discount)" name="Discount" autocomplete="off"/>
                        </td>
                        
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Price)" name="Price" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Fk_Currency_Name)" name="Fk_Currency_Name" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Video)" name="Video" autocomplete="off"/>
                        </td>
                         <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.SEOTitle)" name="SEOTitle" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.SEODescription)" name="SEODescription" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.SEOKeywords)" name="SEOKeywords" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.StructuredData)" name="StructuredData" autocomplete="off"/>
                        </td>

                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Transport)" name="Transport" autocomplete="off" />
                        </td>

                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Stay)" name="Stay" autocomplete="off" />
                        </td>

                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.Remarks)" name="Remarks" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezeStatus)" name="FreezeStatus" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.FreezedBy)" name="FreezedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedStatus)" name="VerifiedStatus" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedOn)" name="VerifiedOn" autocomplete="off" id="VerifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('VerifiedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.VerifiedBy)" name="VerifiedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActiveStatus)" name="ActiveStatus" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedOn)" name="ActivatedOn" autocomplete="off" id="ActivatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ActivatedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ActivatedBy)" name="ActivatedBy" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedOn)" name="CreatedOn" autocomplete="off" id="CreatedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('CreatedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CreatedBy)" name="CreatedBy" autocomplete="off"/>
                        </td>
                                                <td>
                           <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedOn)" name="ModifiedOn" autocomplete="off" id="ModifiedOn" UTDate="D-MM-YYYY" onclick="ShowCalender('ModifiedOn','Date')"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModifiedBy)" name="ModifiedBy" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.ModificationFrequency)" name="ModificationFrequency" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.GCompId)" name="GCompId" autocomplete="off"/>
                        </td>
                        
                        <td>
                            <input class="TtBxTt15" type="text" placeholder="@Html.DisplayNameFor(model => model.CompId)" name="CompId" autocomplete="off"/>
                        </td>
                                            </tr>
                </form>
                <tr>
                    <th>
                        <span class="BnInSe14  CrBdTeBn HrTmSeo94 Cr-uPr">
                            <input type="checkbox" class="SeIt1o14" onclick="AmSelectEntries();" id="AmIndexCheckBoxThId" />
                        </span>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark UnStar" onclick="MultiButtonFunc('UnStar','','','/ColorStays/Package')"><i class="UT-UnstarSolid"></i></a>
                        <a class="BnInSe17  CrBdTeBn HrTmSeo94 Cr-1Pr" href="#" title="Mark Star" onclick="MultiButtonFunc('Star','','','/ColorStays/Package')"> <i class="UT-StarSolid"></i></a>
                    </th>
                                        <th> @Html.DisplayNameFor(model => model.Rank) </th>
                                        <th> @Html.DisplayNameFor(model => model.Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.URL) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_PackageType_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Website_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Location_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_City_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_State_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Country_Name) </th>      
                                        <th style="min-width: 500px;"> @Html.DisplayNameFor(model => model.Description) </th>
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.PackageHighlight) </th> 
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.Overview) </th>    
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.NeedToKonw) </th>       
                                        <th> @Html.DisplayNameFor(model => model.MapLink) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_TermsAndCondition_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_CancellationPyTe_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.NoOfPerson) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CoverImage) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CoverAltTag) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Duration) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Breakfast) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Lunch) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Dinner) </th>  
                                        <th> @Html.DisplayNameFor(model => model.Sightseeing) </th>       
                                        <th> @Html.DisplayNameFor(model => model.LowestPriceQuote) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Discount) </th>              
                                        <th> @Html.DisplayNameFor(model => model.Price) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Fk_Currency_Name) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Video) </th>   
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.SEOTitle) </th>       
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.SEODescription) </th>       
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.SEOKeywords) </th>       
                                        <th style="min-width: 300px;"> @Html.DisplayNameFor(model => model.StructuredData) </th> 
                                        <th> @Html.DisplayNameFor(model => model.Transport) </th>       
                                        <th> @Html.DisplayNameFor(model => model.Stay) </th> 
                                        <th> @Html.DisplayNameFor(model => model.Remarks) </th>       
                                        <th> @Html.DisplayNameFor(model => model.FreezeStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.FreezedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.VerifiedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActiveStatus) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActivatedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ActivatedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CreatedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CreatedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModifiedOn) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModifiedBy) </th>       
                                        <th> @Html.DisplayNameFor(model => model.ModificationFrequency) </th>       
                                        <th> @Html.DisplayNameFor(model => model.GCompId) </th>       
                                        <th> @Html.DisplayNameFor(model => model.CompId) </th>       
                                    </tr>
            </thead>

            <tbody id="Def">
                @await Html.PartialAsync("_IndexData")
            </tbody>
        </table>
    </div>
</div>

<script>
    function ShowData(element) {
        var popup = document.getElementById('PopUpScript');
        popup.style.minHeight = "50%";
        popup.style.left = "25%";
        popup.style.top = "18%";
        popup.style.width = "50%";
        popup.style.overflowX = "auto";
        document.getElementById('PopUpScript').style.display = 'block';
        document.getElementById('PopUpScriptDetailContentID').innerHTML = element.innerHTML;
    }
</script>